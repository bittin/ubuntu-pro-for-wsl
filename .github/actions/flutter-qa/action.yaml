name: Flutter Quality Checks
description: Setup Flutter and run the quality checks. Ouputs test coverage information.

inputs:
  flutter-version:
    required: true
    description: "The Flutter SDK version to use."
  package-dir:
    required: true
    description: "The root directory of the package to lint."
  run-build-runner:
    default: 'false'
    description: "Whether we must run build-runner for this package."    

outputs:
  coverage-info:
    description: Test coverage information.
    value: ${{ steps.flutter-test-cov.outputs.flutter-test-cov }}

runs:
  using: "composite"
  steps:
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: '${{ inputs.flutter-version }}'
    - name: Format
      shell: bash
      working-directory: '${{ inputs.package-dir }}'
      run: |
        find . -name '*.dart' \
          ! -name '*.g.dart' \
          ! -name '*.freezed.dart' \
          ! -path '*/l10n/*' \
          ! -path "*/.*/*" \
          | xargs dart format --set-exit-if-changed
    - name: Dart Codegen
      if: ${{ inputs.run-build-runner == 'true' }}
      shell: bash
      working-directory: '${{ inputs.package-dir }}'
      run: flutter pub get && flutter pub run build_runner build --delete-conflicting-outputs
    - name: Analyze
      shell: bash
      working-directory: '${{ inputs.package-dir }}'
      run: flutter analyze
    - name: Install coverage dependencies
      shell: bash
      run: |
        dart pub global activate cobertura
    - name: Test
      id: flutter-test-cov
      shell: bash
      working-directory: "${{ inputs.package-dir }}"
      run: |
        flutter test --coverage
        # Remove entries for generated code, if any.
        if [ -n "$(which lcov 2>/dev/null)" ]; then
          lcov --remove coverage/lcov.info "**/*.g.dart" "**/*.freezed.dart" "**/*.pb*.dart" "**/*.mocks.dart" "**/l10n/*.dart" -o coverage/lcov.info --ignore-errors unused,unused
        fi

        cobertura convert
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.package }}-${{ matrix.os }}
        path: ${{ inputs.package-dir }}/coverage/cobertura.xml
    - name: Cleanup
      shell: bash
      working-directory: "${{ inputs.package-dir }}"
      run: |
        rm -rf ./coverage
